"use strict";(self.webpackChunkKT2L=self.webpackChunkKT2L||[]).push([[274],{938:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=n(5893),t=n(1151);const i={sidebar_position:5,title:"Stress"},a="Stress Example Container",o={id:"container-examples-suite/stress",title:"Stress",description:"This container is a simple example of a container that consumes resources. It uses the stress-ng command to consume",source:"@site/docs/container-examples-suite/stress.md",sourceDirName:"container-examples-suite",slug:"/container-examples-suite/stress",permalink:"/docs/container-examples-suite/stress",draft:!1,unlisted:!1,editUrl:"https://github.com/mhus/mhus.de/blob/main/docs/container-examples-suite/stress.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"Stress"},sidebar:"tutorialSidebar",previous:{title:"Bash Example Container",permalink:"/docs/container-examples-suite/bash"},next:{title:"Lorem Ipsum",permalink:"/docs/container-examples-suite/lorem"}},l={},c=[{value:"Environment variables",id:"environment-variables",level:2},{value:"Examples for STRESS variable",id:"examples-for-stress-variable",level:2},{value:"Running with docker",id:"running-with-docker",level:2},{value:"Running with kubernetes",id:"running-with-kubernetes",level:2}];function d(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h1,{id:"stress-example-container",children:"Stress Example Container"}),"\n",(0,r.jsxs)(s.p,{children:["This container is a simple example of a container that consumes resources. It uses the ",(0,r.jsx)(s.code,{children:"stress-ng"})," command to consume\nCPU and memory resources. The use case for this container is to demonstrate how the orchestrator can handle a container\nthat consumes lots of resources."]}),"\n",(0,r.jsx)(s.h2,{id:"environment-variables",children:"Environment variables"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"STRESS"}),": The parameters for the stress-ng command. (default: --vm 1 --vm-bytes 128M --vm-hang 0)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"WAIT"}),": The duration to wait before starting to consume resources in seconds. (default: 0)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"INFINITE"}),": If set to ",(0,r.jsx)(s.code,{children:"true"}),", the container will run until it is stopped. (default: false)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"SLEEP"}),": The duration to sleep between each iteration in seconds. (default: 1)"]}),"\n",(0,r.jsx)(s.li,{}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["Fore more options for the ",(0,r.jsx)(s.code,{children:"stress-ng"})," command, see the ",(0,r.jsx)(s.a,{href:"https://wiki.ubuntu.com/Kernel/Reference/stress-ng",children:"stress-ng documentation"}),"."]}),"\n",(0,r.jsx)(s.h2,{id:"examples-for-stress-variable",children:"Examples for STRESS variable"}),"\n",(0,r.jsx)(s.p,{children:"Examples from the stress-ng documentation:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Getting the CPU hot ",(0,r.jsx)(s.code,{children:"--matrix 0 --matrix-size 64 --tz  -t 60"})]}),"\n",(0,r.jsxs)(s.li,{children:["Forcing memory pressure ",(0,r.jsx)(s.code,{children:"--brk 2 --stack 2 --bigheap 2"})]}),"\n",(0,r.jsxs)(s.li,{children:["Causing More Virtual Memory: ",(0,r.jsx)(s.code,{children:"--vm 2 --vm-bytes 2G --mmap 2 --mmap-bytes 2G --page-in"})]}),"\n",(0,r.jsxs)(s.li,{children:["Generating a large interrupt load: ",(0,r.jsx)(s.code,{children:"--timer 32 --timer-freq 1000000"})]}),"\n",(0,r.jsxs)(s.li,{children:["Generating major page faults: ",(0,r.jsx)(s.code,{children:"--fault 0 --perf -t 1m"})]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"running-with-docker",children:"Running with docker"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:'docker run -it --rm -e STRESS="--vm 1 --vm-bytes 128M --vm-hang 0" -e WAIT=2 -e INFINITE=true mhus/example-stress:latest\n'})}),"\n",(0,r.jsx)(s.h2,{id:"running-with-kubernetes",children:"Running with kubernetes"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:'kubectl run stress --image=mhus/example-stress:latest --env="STRESS=--vm 1 --vm-bytes 128M --vm-hang 0" --env="WAIT=2" --env="INFINITE=true"\n'})})]})}function h(e={}){const{wrapper:s}={...(0,t.a)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);