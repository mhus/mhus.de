"use strict";(self.webpackChunkKT2L=self.webpackChunkKT2L||[]).push([[676],{2824:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>c});var i=r(5893),s=r(1151);const t={sidebar_position:6,title:"Web Example Container"},a="Web Example Container",l={id:"container-examples-suite/web",title:"Web Example Container",description:"This container is a simple example of a container that runs a web server. It uses the nginx web server to serve a",source:"@site/docs/container-examples-suite/web.md",sourceDirName:"container-examples-suite",slug:"/container-examples-suite/web",permalink:"/docs/container-examples-suite/web",draft:!1,unlisted:!1,editUrl:"https://github.com/mhus/mhus.de/blob/main/docs/container-examples-suite/web.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,title:"Web Example Container"},sidebar:"tutorialSidebar",previous:{title:"Stress Example Container",permalink:"/docs/container-examples-suite/stress"}},o={},c=[{value:"Environment variables",id:"environment-variables",level:2},{value:"Running with docker",id:"running-with-docker",level:2},{value:"Running with kubernetes",id:"running-with-kubernetes",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"web-example-container",children:"Web Example Container"}),"\n",(0,i.jsxs)(n.p,{children:["This container is a simple example of a container that runs a web server. It uses the ",(0,i.jsx)(n.code,{children:"nginx"})," web server to serve a\nsimple HTML page. The use case for this container is to demonstrate how to use a web server in a container."]}),"\n",(0,i.jsxs)(n.p,{children:["The container is based on the ",(0,i.jsx)(n.code,{children:"nginx"})," image and generates a simple HTML page at startup. The port is always set to 80."]}),"\n",(0,i.jsx)(n.h2,{id:"environment-variables",children:"Environment variables"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"MESSAGE"}),': The message to display on the web page. (default: "Hello World")']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"COLOR"}),": The color of the message. (default: blue) Available colors are red, green, blue, yellow, pink, purple, orange, brown, black, white, gray, and cyan."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"COLOR_TEXT"}),": The color of the text. (default: white) Available colors are red, green, blue, yellow, pink, purple, orange, brown, black, white, gray, and cyan."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"RANDOM_COLOR"}),": If set to ",(0,i.jsx)(n.code,{children:"true"}),", the colors will be random. (default: false) The background color will be printed in the log."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"running-with-docker",children:"Running with docker"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'docker run -it --rm -e MESSAGE="Hello World" -e COLOR=blue -p 8080:80 mhus/example-web:latest\n'})}),"\n",(0,i.jsx)(n.h2,{id:"running-with-kubernetes",children:"Running with kubernetes"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'kubectl run web --image=mhus/example-web:latest --env="MESSAGE=Hello World" --env="COLOR=blue" --port=80\n'})})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);